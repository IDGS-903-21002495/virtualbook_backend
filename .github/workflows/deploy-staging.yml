name: BE • Deploy a Render (staging)

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: |
          echo "Restaurando dependencias..."
          dotnet restore virtualbook_backend/virtualbook_backend.csproj
          echo "Dependencias restauradas correctamente"

      - name: Build
        run: |
          echo "Construyendo proyecto en modo Release..."
          dotnet build virtualbook_backend/virtualbook_backend.csproj -c Release --no-restore
          echo "Build completado exitosamente"

      - name: Build Summary
        if: always()
        run: |
          echo "## Build Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ job.status }}" == "success" ]; then
            echo "**Build completed successfully**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "- Project: virtualbook_backend" >> $GITHUB_STEP_SUMMARY
            echo "- Configuration: Release" >> $GITHUB_STEP_SUMMARY
            echo "- .NET Version: 9.0.x" >> $GITHUB_STEP_SUMMARY
            echo "- Status: Success" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Build failed**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Please check the logs for more details." >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "_Job summary generated at run-time_" >> $GITHUB_STEP_SUMMARY

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: |
          echo "Restaurando dependencias para testing..."
          dotnet restore virtualbook_backend/virtualbook_backend.csproj

      - name: Build
        run: |
          echo "Construyendo proyecto para testing..."
          dotnet build virtualbook_backend/virtualbook_backend.csproj -c Release --no-restore

      - name: Run Tests
        run: |
          echo "Ejecutando pruebas automáticas..."
          echo "================================================"
          dotnet test virtualbook_backend/virtualbook_backend.csproj -c Release --no-build --verbosity detailed --logger "console;verbosity=detailed"
          echo "================================================"
          echo "Pruebas completadas - Validando comportamiento del sistema"

      - name: Test Summary
        if: always()
        run: |
          echo "## Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ job.status }}" == "success" ]; then
            echo "**Tests executed successfully**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Summary" >> $GITHUB_STEP_SUMMARY
            echo "- All tests passed" >> $GITHUB_STEP_SUMMARY
            echo "- System behavior validated" >> $GITHUB_STEP_SUMMARY
            echo "- Ready for deployment" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Some tests failed**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Summary" >> $GITHUB_STEP_SUMMARY
            echo "- Review required before deploy" >> $GITHUB_STEP_SUMMARY
            echo "- Check test logs for details" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Details" >> $GITHUB_STEP_SUMMARY
          echo "- Branch: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- Author: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "_Job summary generated at run-time_" >> $GITHUB_STEP_SUMMARY

  deploy:
    runs-on: ubuntu-latest
    environment: staging
    needs: [build, test]
    steps:
      - name: Deploy Validation
        run: |
          echo "VALIDACIÓN PRE-DEPLOY"
          echo "================================================"
          echo "- Build ejecutado correctamente"
          echo "- Tests ejecutados y validados"
          echo "- Sistema listo para deployment"
          echo "================================================"

      - name: Trigger Render Deploy
        run: |
          echo "Disparando deploy en Render..."
          echo "Equipo de desarrollo: Push realizado"
          echo "Equipo de QA/DevOps: Analizando resultados..."
          curl -sS -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"
          echo "Deploy iniciado correctamente en ambiente staging"

      - name: Deploy Complete
        run: |
          echo "========================================================================"
          echo ""
          echo "                    Production deploy is live                          "
          echo ""
          echo "========================================================================"
          echo ""
          echo "   Deployed to production URL: ${{ secrets.RENDER_PRODUCTION_URL }}"
          echo ""
          echo "========================================================================"

      - name: Deploy Summary
        if: always()
        run: |
          echo "## Deploy Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          if [ "${{ job.status }}" == "success" ]; then
            echo "**Deploy completed successfully**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "---" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Production deploy is live" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Deployed to production URL:** [${{ secrets.RENDER_PRODUCTION_URL }}](${{ secrets.RENDER_PRODUCTION_URL }})" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "---" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Deployment Details" >> $GITHUB_STEP_SUMMARY
            echo "- Environment: **staging**" >> $GITHUB_STEP_SUMMARY
            echo "- Branch: **master**" >> $GITHUB_STEP_SUMMARY
            echo "- Platform: **Render**" >> $GITHUB_STEP_SUMMARY
            echo "- Status: Success" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Pipeline Summary" >> $GITHUB_STEP_SUMMARY
            echo "- Build passed" >> $GITHUB_STEP_SUMMARY
            echo "- Tests passed" >> $GITHUB_STEP_SUMMARY
            echo "- Deploy completed" >> $GITHUB_STEP_SUMMARY
          else
            echo "**Deploy failed**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Please check the deployment logs." >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Metrics" >> $GITHUB_STEP_SUMMARY
          echo "- Timestamp: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- Commit: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- Triggered by: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "_Job summary generated at run-time_" >> $GITHUB_STEP_SUMMARY